{"remainingRequest":"/Volumes/HD/xiaoMi/FE/xiaomi-mall-mobile/node_modules/babel-loader/lib/index.js!/Volumes/HD/xiaoMi/FE/xiaomi-mall-mobile/node_modules/eslint-loader/index.js??ref--13-0!/Volumes/HD/xiaoMi/FE/xiaomi-mall-mobile/src/api/index.js","dependencies":[{"path":"/Volumes/HD/xiaoMi/FE/xiaomi-mall-mobile/src/api/index.js","mtime":1636026227335},{"path":"/Volumes/HD/xiaoMi/FE/xiaomi-mall-mobile/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Volumes/HD/xiaoMi/FE/xiaomi-mall-mobile/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Volumes/HD/xiaoMi/FE/xiaomi-mall-mobile/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:LyoqDQogKiBFbmNhcHN1bGF0ZSB1cmwNCiAqLwovLyAvLyBUaGUgaG9zdCBpcyBpbiBkZXZlbG9wbWVudAovLyBjb25zdCBob3N0ID0gcHJvY2Vzcy5lbnYuVlVFX0FQUF9CQVNFX0FQSQovLyAvLyBUaGUgaG9zdCBpcyBudWxsIGFmdGVyIG9ubGluZQovLyAvLyBjb25zdCBob3N0ID0gJycKLy8gY29uc3QgdXJsID0gewovLyAgIGdldENvZGU6ICcvZ2V0Q29kZScsCi8vICAgbG9naW46ICcvbG9naW4nCi8vIH0KLy8gT2JqZWN0LmtleXModXJsKS5mb3JFYWNoKGtleSA9PiB7Ci8vICAgdXJsW2tleV0gPSBob3N0ICsgdXJsW2tleV0KLy8gfSkKLy8gZXhwb3J0IGRlZmF1bHQgdXJsCgovKioNCiAqIEltcG9ydCByZWxhdGVkIGFwaSBmdW5jdGlvbiB3aGVyZSBuZWVkZWQNCiAqLwppbXBvcnQgYXhpb3MgZnJvbSAnYXhpb3MnOwppbXBvcnQgbW9jayBmcm9tICdAL21vY2snOwp2YXIgYXhpb3NJbnN0YW5jZSA9IGF4aW9zLmNyZWF0ZSh7CiAgYmFzZVVSTDogcHJvY2Vzcy5lbnYuVlVFX0FQUF9CQVNFX0FQSSAvLyB0aW1lb3V0OiA1MDAwLAogIC8vIGhlYWRlcnM6IHsnWC1DdXN0b20tSGVhZGVyJzogJ2Zvb2Jhcid9LAogIC8vIHdpdGhDcmVkZW50aWFsczogdHJ1ZSAvLyBzZW5kIGNvb2tpZXMgd2hlbiBjcm9zcy1kb21haW4gcmVxdWVzdHMKCn0pOyAvLyBEbyBzb21ldGhpbmcgYmVmb3JlIHNlbmRpbmcgcmVxdWVzdAoKYXhpb3NJbnN0YW5jZS5pbnRlcmNlcHRvcnMucmVxdWVzdC51c2UoZnVuY3Rpb24gKGNvbmZpZykgewogIC8vIC8vIEFkZCBBdXRob3JpemF0aW9uIEJlYXJlciBUb2tlbiBoZWFkZXIgdG8gZXZlcnkgcmVxdWVzdAogIC8vIGlmKHRva2VuKSB7CiAgLy8gICBjb25maWcuaGVhZGVyc1snQXV0aG9yaXphdGlvbiddID0gJ0JlYWVyJyArIHRva2VuCiAgLy8gfQogIHJldHVybiBjb25maWc7Cn0sIGZ1bmN0aW9uIChlcnJvcikgewogIHJldHVybiBQcm9taXNlLnJlamVjdChlcnJvcik7Cn0pOyAvLyBEbyBzb21ldGhpbmcgYWZ0ZXIgcmVjZWl2aW5nIHJlcG9uc2UKCmF4aW9zSW5zdGFuY2UuaW50ZXJjZXB0b3JzLnJlc3BvbnNlLnVzZShmdW5jdGlvbiAocmVzcG9uc2UpIHsKICByZXR1cm4gcmVzcG9uc2UuZGF0YTsKfSwgZnVuY3Rpb24gKGVycikgewogIC8vIHJldHVybiBQcm9taXNlLnJlamVjdChlcnIpCiAgY29uc29sZS5lcnJvcihlcnIpOwogIHJldHVybiBtb2NrLmdldENvZGU7Cn0pOwpleHBvcnQgZGVmYXVsdCBheGlvc0luc3RhbmNlOw=="},{"version":3,"sources":["/Volumes/HD/xiaoMi/FE/xiaomi-mall-mobile/src/api/index.js"],"names":["axios","mock","axiosInstance","create","baseURL","process","env","VUE_APP_BASE_API","interceptors","request","use","config","error","Promise","reject","response","data","err","console","getCode"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;;AAEA;AACA;AACA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AAEA,IAAMC,aAAa,GAAGF,KAAK,CAACG,MAAN,CAAa;AACjCC,EAAAA,OAAO,EAAEC,OAAO,CAACC,GAAR,CAAYC,gBADY,CAEjC;AACA;AACA;;AAJiC,CAAb,CAAtB,C,CAOA;;AACAL,aAAa,CAACM,YAAd,CAA2BC,OAA3B,CAAmCC,GAAnC,CACE,UAAUC,MAAV,EAAkB;AAChB;AACA;AACA;AACA;AAEA,SAAOA,MAAP;AACD,CARH,EASE,UAAUC,KAAV,EAAiB;AACf,SAAOC,OAAO,CAACC,MAAR,CAAeF,KAAf,CAAP;AACD,CAXH,E,CAcA;;AACAV,aAAa,CAACM,YAAd,CAA2BO,QAA3B,CAAoCL,GAApC,CAEE,UAAUK,QAAV,EAAoB;AAClB,SAAOA,QAAQ,CAACC,IAAhB;AACD,CAJH,EAKE,UAAUC,GAAV,EAAe;AACb;AACAC,EAAAA,OAAO,CAACN,KAAR,CAAcK,GAAd;AACA,SAAOhB,IAAI,CAACkB,OAAZ;AACD,CATH;AAYA,eAAejB,aAAf","sourcesContent":["/**\r\n * Encapsulate url\r\n */\r\n// // The host is in development\r\n// const host = process.env.VUE_APP_BASE_API\r\n\r\n// // The host is null after online\r\n// // const host = ''\r\n\r\n// const url = {\r\n//   getCode: '/getCode',\r\n//   login: '/login'\r\n// }\r\n\r\n// Object.keys(url).forEach(key => {\r\n//   url[key] = host + url[key]\r\n// })\r\n\r\n// export default url\r\n\r\n/**\r\n * Import related api function where needed\r\n */\r\nimport axios from 'axios'\r\nimport mock from '@/mock'\r\n\r\nconst axiosInstance = axios.create({\r\n  baseURL: process.env.VUE_APP_BASE_API\r\n  // timeout: 5000,\r\n  // headers: {'X-Custom-Header': 'foobar'},\r\n  // withCredentials: true // send cookies when cross-domain requests\r\n})\r\n\r\n// Do something before sending request\r\naxiosInstance.interceptors.request.use(\r\n  function (config) {\r\n    // // Add Authorization Bearer Token header to every request\r\n    // if(token) {\r\n    //   config.headers['Authorization'] = 'Beaer' + token\r\n    // }\r\n\r\n    return config\r\n  },\r\n  function (error) {\r\n    return Promise.reject(error)\r\n  }\r\n)\r\n\r\n// Do something after receiving reponse\r\naxiosInstance.interceptors.response.use(\r\n\r\n  function (response) {\r\n    return response.data\r\n  },\r\n  function (err) {\r\n    // return Promise.reject(err)\r\n    console.error(err)\r\n    return mock.getCode\r\n  }\r\n)\r\n\r\nexport default axiosInstance\r\n"]}]}